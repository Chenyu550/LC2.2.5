// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedMessage;
import us.hebi.quickbuf.Utf8String;

public final class WolfBroGameDataOuterClass {
  /**
   * Protobuf type {@code WolfBroGameData}
   */
  public static final class WolfBroGameData extends ProtoMessage<WolfBroGameData> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 id = 14;</code>
     */
    private int id;

    /**
     * <pre>
     *
     * </pre>
     *
     * <code>optional uint32 MKFHNLNJKGM = 15;</code>
     */
    private int mKFHNLNJKGM;

    /**
     * <pre>
     *
     * </pre>
     *
     * <code>optional bool NPOCLIDMIAB = 10;</code>
     */
    private boolean nPOCLIDMIAB;

    /**
     * <code>optional .WolfBroGameInfo JFPEIIOGJLK = 4;</code>
     */
    private final WolfBroGameInfoOuterClass.WolfBroGameInfo jFPEIIOGJLK = WolfBroGameInfoOuterClass.WolfBroGameInfo.newInstance();

    /**
     * <code>optional string JPJECFKEJIN = 2;</code>
     */
    private final Utf8String jPJECFKEJIN = Utf8String.newEmptyInstance();

    /**
     * <code>repeated .Vector EDPADDBAMME = 7;</code>
     */
    private final RepeatedMessage<VectorOuterClass.Vector> eDPADDBAMME = RepeatedMessage.newEmptyInstance(VectorOuterClass.Vector.getFactory());

    private WolfBroGameData() {
    }

    /**
     * @return a new empty instance of {@code WolfBroGameData}
     */
    public static WolfBroGameData newInstance() {
      return new WolfBroGameData();
    }

    /**
     * <code>optional uint32 id = 14;</code>
     * @return whether the id field is set
     */
    public boolean hasId() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 id = 14;</code>
     * @return this
     */
    public WolfBroGameData clearId() {
      bitField0_ &= ~0x00000001;
      id = 0;
      return this;
    }

    /**
     * <code>optional uint32 id = 14;</code>
     * @return the id
     */
    public int getId() {
      return id;
    }

    /**
     * <code>optional uint32 id = 14;</code>
     * @param value the id to set
     * @return this
     */
    public WolfBroGameData setId(final int value) {
      bitField0_ |= 0x00000001;
      id = value;
      return this;
    }

    /**
     * <pre>
     *
     * </pre>
     *
     * <code>optional uint32 MKFHNLNJKGM = 15;</code>
     * @return whether the mKFHNLNJKGM field is set
     */
    public boolean hasMKFHNLNJKGM() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <pre>
     *
     * </pre>
     *
     * <code>optional uint32 MKFHNLNJKGM = 15;</code>
     * @return this
     */
    public WolfBroGameData clearMKFHNLNJKGM() {
      bitField0_ &= ~0x00000002;
      mKFHNLNJKGM = 0;
      return this;
    }

    /**
     * <pre>
     *
     * </pre>
     *
     * <code>optional uint32 MKFHNLNJKGM = 15;</code>
     * @return the mKFHNLNJKGM
     */
    public int getMKFHNLNJKGM() {
      return mKFHNLNJKGM;
    }

    /**
     * <pre>
     *
     * </pre>
     *
     * <code>optional uint32 MKFHNLNJKGM = 15;</code>
     * @param value the mKFHNLNJKGM to set
     * @return this
     */
    public WolfBroGameData setMKFHNLNJKGM(final int value) {
      bitField0_ |= 0x00000002;
      mKFHNLNJKGM = value;
      return this;
    }

    /**
     * <pre>
     *
     * </pre>
     *
     * <code>optional bool NPOCLIDMIAB = 10;</code>
     * @return whether the nPOCLIDMIAB field is set
     */
    public boolean hasNPOCLIDMIAB() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <pre>
     *
     * </pre>
     *
     * <code>optional bool NPOCLIDMIAB = 10;</code>
     * @return this
     */
    public WolfBroGameData clearNPOCLIDMIAB() {
      bitField0_ &= ~0x00000004;
      nPOCLIDMIAB = false;
      return this;
    }

    /**
     * <pre>
     *
     * </pre>
     *
     * <code>optional bool NPOCLIDMIAB = 10;</code>
     * @return the nPOCLIDMIAB
     */
    public boolean getNPOCLIDMIAB() {
      return nPOCLIDMIAB;
    }

    /**
     * <pre>
     *
     * </pre>
     *
     * <code>optional bool NPOCLIDMIAB = 10;</code>
     * @param value the nPOCLIDMIAB to set
     * @return this
     */
    public WolfBroGameData setNPOCLIDMIAB(final boolean value) {
      bitField0_ |= 0x00000004;
      nPOCLIDMIAB = value;
      return this;
    }

    /**
     * <code>optional .WolfBroGameInfo JFPEIIOGJLK = 4;</code>
     * @return whether the jFPEIIOGJLK field is set
     */
    public boolean hasJFPEIIOGJLK() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional .WolfBroGameInfo JFPEIIOGJLK = 4;</code>
     * @return this
     */
    public WolfBroGameData clearJFPEIIOGJLK() {
      bitField0_ &= ~0x00000008;
      jFPEIIOGJLK.clear();
      return this;
    }

    /**
     * <code>optional .WolfBroGameInfo JFPEIIOGJLK = 4;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableJFPEIIOGJLK()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public WolfBroGameInfoOuterClass.WolfBroGameInfo getJFPEIIOGJLK() {
      return jFPEIIOGJLK;
    }

    /**
     * <code>optional .WolfBroGameInfo JFPEIIOGJLK = 4;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public WolfBroGameInfoOuterClass.WolfBroGameInfo getMutableJFPEIIOGJLK() {
      bitField0_ |= 0x00000008;
      return jFPEIIOGJLK;
    }

    /**
     * <code>optional .WolfBroGameInfo JFPEIIOGJLK = 4;</code>
     * @param value the jFPEIIOGJLK to set
     * @return this
     */
    public WolfBroGameData setJFPEIIOGJLK(final WolfBroGameInfoOuterClass.WolfBroGameInfo value) {
      bitField0_ |= 0x00000008;
      jFPEIIOGJLK.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string JPJECFKEJIN = 2;</code>
     * @return whether the jPJECFKEJIN field is set
     */
    public boolean hasJPJECFKEJIN() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional string JPJECFKEJIN = 2;</code>
     * @return this
     */
    public WolfBroGameData clearJPJECFKEJIN() {
      bitField0_ &= ~0x00000010;
      jPJECFKEJIN.clear();
      return this;
    }

    /**
     * <code>optional string JPJECFKEJIN = 2;</code>
     * @return the jPJECFKEJIN
     */
    public String getJPJECFKEJIN() {
      return jPJECFKEJIN.getString();
    }

    /**
     * <code>optional string JPJECFKEJIN = 2;</code>
     * @return internal {@code Utf8String} representation of jPJECFKEJIN for reading
     */
    public Utf8String getJPJECFKEJINBytes() {
      return this.jPJECFKEJIN;
    }

    /**
     * <code>optional string JPJECFKEJIN = 2;</code>
     * @return internal {@code Utf8String} representation of jPJECFKEJIN for modifications
     */
    public Utf8String getMutableJPJECFKEJINBytes() {
      bitField0_ |= 0x00000010;
      return this.jPJECFKEJIN;
    }

    /**
     * <code>optional string JPJECFKEJIN = 2;</code>
     * @param value the jPJECFKEJIN to set
     * @return this
     */
    public WolfBroGameData setJPJECFKEJIN(final CharSequence value) {
      bitField0_ |= 0x00000010;
      jPJECFKEJIN.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string JPJECFKEJIN = 2;</code>
     * @param value the jPJECFKEJIN to set
     * @return this
     */
    public WolfBroGameData setJPJECFKEJIN(final Utf8String value) {
      bitField0_ |= 0x00000010;
      jPJECFKEJIN.copyFrom(value);
      return this;
    }

    /**
     * <code>repeated .Vector EDPADDBAMME = 7;</code>
     * @return whether the eDPADDBAMME field is set
     */
    public boolean hasEDPADDBAMME() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>repeated .Vector EDPADDBAMME = 7;</code>
     * @return this
     */
    public WolfBroGameData clearEDPADDBAMME() {
      bitField0_ &= ~0x00000020;
      eDPADDBAMME.clear();
      return this;
    }

    /**
     * <code>repeated .Vector EDPADDBAMME = 7;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableEDPADDBAMME()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<VectorOuterClass.Vector> getEDPADDBAMME() {
      return eDPADDBAMME;
    }

    /**
     * <code>repeated .Vector EDPADDBAMME = 7;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<VectorOuterClass.Vector> getMutableEDPADDBAMME() {
      bitField0_ |= 0x00000020;
      return eDPADDBAMME;
    }

    /**
     * <code>repeated .Vector EDPADDBAMME = 7;</code>
     * @param value the eDPADDBAMME to add
     * @return this
     */
    public WolfBroGameData addEDPADDBAMME(final VectorOuterClass.Vector value) {
      bitField0_ |= 0x00000020;
      eDPADDBAMME.add(value);
      return this;
    }

    /**
     * <code>repeated .Vector EDPADDBAMME = 7;</code>
     * @param values the eDPADDBAMME to add
     * @return this
     */
    public WolfBroGameData addAllEDPADDBAMME(final VectorOuterClass.Vector... values) {
      bitField0_ |= 0x00000020;
      eDPADDBAMME.addAll(values);
      return this;
    }

    @Override
    public WolfBroGameData copyFrom(final WolfBroGameData other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        id = other.id;
        mKFHNLNJKGM = other.mKFHNLNJKGM;
        nPOCLIDMIAB = other.nPOCLIDMIAB;
        jFPEIIOGJLK.copyFrom(other.jFPEIIOGJLK);
        jPJECFKEJIN.copyFrom(other.jPJECFKEJIN);
        eDPADDBAMME.copyFrom(other.eDPADDBAMME);
      }
      return this;
    }

    @Override
    public WolfBroGameData mergeFrom(final WolfBroGameData other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasId()) {
        setId(other.id);
      }
      if (other.hasMKFHNLNJKGM()) {
        setMKFHNLNJKGM(other.mKFHNLNJKGM);
      }
      if (other.hasNPOCLIDMIAB()) {
        setNPOCLIDMIAB(other.nPOCLIDMIAB);
      }
      if (other.hasJFPEIIOGJLK()) {
        getMutableJFPEIIOGJLK().mergeFrom(other.jFPEIIOGJLK);
      }
      if (other.hasJPJECFKEJIN()) {
        getMutableJPJECFKEJINBytes().copyFrom(other.jPJECFKEJIN);
      }
      if (other.hasEDPADDBAMME()) {
        getMutableEDPADDBAMME().addAll(other.eDPADDBAMME);
      }
      return this;
    }

    @Override
    public WolfBroGameData clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      id = 0;
      mKFHNLNJKGM = 0;
      nPOCLIDMIAB = false;
      jFPEIIOGJLK.clear();
      jPJECFKEJIN.clear();
      eDPADDBAMME.clear();
      return this;
    }

    @Override
    public WolfBroGameData clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      jFPEIIOGJLK.clearQuick();
      jPJECFKEJIN.clear();
      eDPADDBAMME.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof WolfBroGameData)) {
        return false;
      }
      WolfBroGameData other = (WolfBroGameData) o;
      return bitField0_ == other.bitField0_
        && (!hasId() || id == other.id)
        && (!hasMKFHNLNJKGM() || mKFHNLNJKGM == other.mKFHNLNJKGM)
        && (!hasNPOCLIDMIAB() || nPOCLIDMIAB == other.nPOCLIDMIAB)
        && (!hasJFPEIIOGJLK() || jFPEIIOGJLK.equals(other.jFPEIIOGJLK))
        && (!hasJPJECFKEJIN() || jPJECFKEJIN.equals(other.jPJECFKEJIN))
        && (!hasEDPADDBAMME() || eDPADDBAMME.equals(other.eDPADDBAMME));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 120);
        output.writeUInt32NoTag(mKFHNLNJKGM);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 80);
        output.writeBoolNoTag(nPOCLIDMIAB);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 34);
        output.writeMessageNoTag(jFPEIIOGJLK);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 18);
        output.writeStringNoTag(jPJECFKEJIN);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        for (int i = 0; i < eDPADDBAMME.length(); i++) {
          output.writeRawByte((byte) 58);
          output.writeMessageNoTag(eDPADDBAMME.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(mKFHNLNJKGM);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(jFPEIIOGJLK);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(jPJECFKEJIN);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += (1 * eDPADDBAMME.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(eDPADDBAMME);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public WolfBroGameData mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 112: {
            // id
            id = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 120) {
              break;
            }
          }
          case 120: {
            // mKFHNLNJKGM
            mKFHNLNJKGM = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // nPOCLIDMIAB
            nPOCLIDMIAB = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 34) {
              break;
            }
          }
          case 34: {
            // jFPEIIOGJLK
            input.readMessage(jFPEIIOGJLK);
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 18) {
              break;
            }
          }
          case 18: {
            // jPJECFKEJIN
            input.readString(jPJECFKEJIN);
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 58) {
              break;
            }
          }
          case 58: {
            // eDPADDBAMME
            tag = input.readRepeatedMessage(eDPADDBAMME, tag);
            bitField0_ |= 0x00000020;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.id, id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.mKFHNLNJKGM, mKFHNLNJKGM);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.nPOCLIDMIAB, nPOCLIDMIAB);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeMessage(FieldNames.jFPEIIOGJLK, jFPEIIOGJLK);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeString(FieldNames.jPJECFKEJIN, jPJECFKEJIN);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRepeatedMessage(FieldNames.eDPADDBAMME, eDPADDBAMME);
      }
      output.endObject();
    }

    @Override
    public WolfBroGameData mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 3355: {
            if (input.isAtField(FieldNames.id)) {
              if (!input.trySkipNullValue()) {
                id = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1063441065: {
            if (input.isAtField(FieldNames.mKFHNLNJKGM)) {
              if (!input.trySkipNullValue()) {
                mKFHNLNJKGM = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -629373490: {
            if (input.isAtField(FieldNames.nPOCLIDMIAB)) {
              if (!input.trySkipNullValue()) {
                nPOCLIDMIAB = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1040731136: {
            if (input.isAtField(FieldNames.jFPEIIOGJLK)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(jFPEIIOGJLK);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1870769999: {
            if (input.isAtField(FieldNames.jPJECFKEJIN)) {
              if (!input.trySkipNullValue()) {
                input.readString(jPJECFKEJIN);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1067932854: {
            if (input.isAtField(FieldNames.eDPADDBAMME)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(eDPADDBAMME);
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public WolfBroGameData clone() {
      return new WolfBroGameData().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static WolfBroGameData parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), data).checkInitialized();
    }

    public static WolfBroGameData parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), input).checkInitialized();
    }

    public static WolfBroGameData parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), input).checkInitialized();
    }

    /**
     * @return factory for creating WolfBroGameData messages
     */
    public static MessageFactory<WolfBroGameData> getFactory() {
      return WolfBroGameDataFactory.INSTANCE;
    }

    private enum WolfBroGameDataFactory implements MessageFactory<WolfBroGameData> {
      INSTANCE;

      @Override
      public WolfBroGameData create() {
        return WolfBroGameData.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName id = FieldName.forField("id");

      static final FieldName mKFHNLNJKGM = FieldName.forField("MKFHNLNJKGM");

      static final FieldName nPOCLIDMIAB = FieldName.forField("NPOCLIDMIAB");

      static final FieldName jFPEIIOGJLK = FieldName.forField("JFPEIIOGJLK");

      static final FieldName jPJECFKEJIN = FieldName.forField("JPJECFKEJIN");

      static final FieldName eDPADDBAMME = FieldName.forField("EDPADDBAMME");
    }
  }
}
