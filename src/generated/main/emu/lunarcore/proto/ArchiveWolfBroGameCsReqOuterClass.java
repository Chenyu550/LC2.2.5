// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class ArchiveWolfBroGameCsReqOuterClass {
  /**
   * Protobuf type {@code ArchiveWolfBroGameCsReq}
   */
  public static final class ArchiveWolfBroGameCsReq extends ProtoMessage<ArchiveWolfBroGameCsReq> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 id = 6;</code>
     */
    private int id;

    /**
     * <code>optional .MotionInfo motion = 8;</code>
     */
    private final MotionInfoOuterClass.MotionInfo motion = MotionInfoOuterClass.MotionInfo.newInstance();

    private ArchiveWolfBroGameCsReq() {
    }

    /**
     * @return a new empty instance of {@code ArchiveWolfBroGameCsReq}
     */
    public static ArchiveWolfBroGameCsReq newInstance() {
      return new ArchiveWolfBroGameCsReq();
    }

    /**
     * <code>optional uint32 id = 6;</code>
     * @return whether the id field is set
     */
    public boolean hasId() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 id = 6;</code>
     * @return this
     */
    public ArchiveWolfBroGameCsReq clearId() {
      bitField0_ &= ~0x00000001;
      id = 0;
      return this;
    }

    /**
     * <code>optional uint32 id = 6;</code>
     * @return the id
     */
    public int getId() {
      return id;
    }

    /**
     * <code>optional uint32 id = 6;</code>
     * @param value the id to set
     * @return this
     */
    public ArchiveWolfBroGameCsReq setId(final int value) {
      bitField0_ |= 0x00000001;
      id = value;
      return this;
    }

    /**
     * <code>optional .MotionInfo motion = 8;</code>
     * @return whether the motion field is set
     */
    public boolean hasMotion() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional .MotionInfo motion = 8;</code>
     * @return this
     */
    public ArchiveWolfBroGameCsReq clearMotion() {
      bitField0_ &= ~0x00000002;
      motion.clear();
      return this;
    }

    /**
     * <code>optional .MotionInfo motion = 8;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableMotion()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public MotionInfoOuterClass.MotionInfo getMotion() {
      return motion;
    }

    /**
     * <code>optional .MotionInfo motion = 8;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public MotionInfoOuterClass.MotionInfo getMutableMotion() {
      bitField0_ |= 0x00000002;
      return motion;
    }

    /**
     * <code>optional .MotionInfo motion = 8;</code>
     * @param value the motion to set
     * @return this
     */
    public ArchiveWolfBroGameCsReq setMotion(final MotionInfoOuterClass.MotionInfo value) {
      bitField0_ |= 0x00000002;
      motion.copyFrom(value);
      return this;
    }

    @Override
    public ArchiveWolfBroGameCsReq copyFrom(final ArchiveWolfBroGameCsReq other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        id = other.id;
        motion.copyFrom(other.motion);
      }
      return this;
    }

    @Override
    public ArchiveWolfBroGameCsReq mergeFrom(final ArchiveWolfBroGameCsReq other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasId()) {
        setId(other.id);
      }
      if (other.hasMotion()) {
        getMutableMotion().mergeFrom(other.motion);
      }
      return this;
    }

    @Override
    public ArchiveWolfBroGameCsReq clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      id = 0;
      motion.clear();
      return this;
    }

    @Override
    public ArchiveWolfBroGameCsReq clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      motion.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof ArchiveWolfBroGameCsReq)) {
        return false;
      }
      ArchiveWolfBroGameCsReq other = (ArchiveWolfBroGameCsReq) o;
      return bitField0_ == other.bitField0_
        && (!hasId() || id == other.id)
        && (!hasMotion() || motion.equals(other.motion));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 48);
        output.writeUInt32NoTag(id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 66);
        output.writeMessageNoTag(motion);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(motion);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public ArchiveWolfBroGameCsReq mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 48: {
            // id
            id = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 66) {
              break;
            }
          }
          case 66: {
            // motion
            input.readMessage(motion);
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.id, id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeMessage(FieldNames.motion, motion);
      }
      output.endObject();
    }

    @Override
    public ArchiveWolfBroGameCsReq mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 3355: {
            if (input.isAtField(FieldNames.id)) {
              if (!input.trySkipNullValue()) {
                id = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1068318794: {
            if (input.isAtField(FieldNames.motion)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(motion);
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public ArchiveWolfBroGameCsReq clone() {
      return new ArchiveWolfBroGameCsReq().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static ArchiveWolfBroGameCsReq parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new ArchiveWolfBroGameCsReq(), data).checkInitialized();
    }

    public static ArchiveWolfBroGameCsReq parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new ArchiveWolfBroGameCsReq(), input).checkInitialized();
    }

    public static ArchiveWolfBroGameCsReq parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new ArchiveWolfBroGameCsReq(), input).checkInitialized();
    }

    /**
     * @return factory for creating ArchiveWolfBroGameCsReq messages
     */
    public static MessageFactory<ArchiveWolfBroGameCsReq> getFactory() {
      return ArchiveWolfBroGameCsReqFactory.INSTANCE;
    }

    private enum ArchiveWolfBroGameCsReqFactory implements MessageFactory<ArchiveWolfBroGameCsReq> {
      INSTANCE;

      @Override
      public ArchiveWolfBroGameCsReq create() {
        return ArchiveWolfBroGameCsReq.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName id = FieldName.forField("id");

      static final FieldName motion = FieldName.forField("motion");
    }
  }
}
